{
  "version": 3,
  "sources": ["src/app/student/store/reserves.store.ts", "src/app/student/components/reservation-card/reservation-card.component.ts", "src/app/student/components/reservation-card/reservation-card.component.html", "src/app/student/pages/reserves-page/reserves-page.component.ts", "src/app/student/pages/reserves-page/reserves-page.component.html"],
  "sourcesContent": ["import { inject } from \"@angular/core\";\n\nimport { patchState, signalStore, withMethods, withProps, withState } from \"@ngrx/signals\";\n\nimport { catchError, Observable, of, switchMap, throwError } from \"rxjs\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ReserveState } from \"../interfaces/reserve.store.interface\";\nimport { ReservationService } from \"src/app/library/services/reservation.service\";\n\nconst initialState: ReserveState = {\n  reserves: [],\n  hasNext: false,\n  hasPrevious: false,\n  page: 0,\n  size: 5\n}\n\nexport const ReservationStore = signalStore(\n  {\n    providedIn: 'root'\n  },\n  withState<ReserveState>(initialState),\n  withProps(() => ({\n    reservationService: inject(ReservationService)\n  })),\n  withMethods(({ reservationService, ...store }) => ({\n    getReserves(): Observable<void> {\n      return reservationService.getMyRerservations(store.page(), store.size()).pipe(\n        switchMap(({ hasNext, hasPrevious, data }) => {\n          if (!data.length && hasPrevious) {\n            patchState(store, { page: store.page() - 1 });\n            return this.getReserves();\n          }\n          patchState(store, { hasNext, hasPrevious, reserves: data });\n          return of(undefined);\n        }),\n        catchError((error: HttpErrorResponse) => {\n          patchState(store, initialState);\n          return throwError(() => error)\n        })\n      );\n    },\n    patchInitialState(): void {\n      patchState(store, initialState);\n    },\n    patchPage(page: number): void {\n      patchState(store, { page });\n    },\n    patchSize(size: number): void {\n      patchState(store, { size });\n    },\n  }))\n)\n", "import { Component, computed, input } from '@angular/core';\nimport { Reserve } from '../../interfaces/reserve.interface';\nimport { environment } from '@envs/environment';\n\n@Component({\n  selector: 'app-reservation-card',\n  imports: [],\n  templateUrl: './reservation-card.component.html',\n  styles: ``\n})\nexport class ReservationCardComponent {\n\n  public reserve = input.required<Reserve>();\n\n  public src = computed(() => `${environment.AWS_URL}/${this.reserve().book.imageUrl}`)\n\n}\n", "<div class=\"card bg-base-200 h-full w-full shadow-md\">\n  <figure class=\"h-48 overflow-hidden\">\n    <img\n      [src]=\"src()\"\n      [alt]=\"reserve().book.title\"\n      class=\"h-full object-cover object-center\"\n    />\n  </figure>\n  <div class=\"card-body\">\n    <span class=\"badge badge-xs badge-secondary truncate\">{{ reserve().expirationDate }}</span>\n    <h2 class=\"card-title\">{{ reserve().book.title }}</h2>\n  </div>\n</div>\n", "import { Component, computed, inject } from '@angular/core';\nimport { ReservationStore } from '../../store/reserves.store';\nimport { rxMethod } from '@ngrx/signals/rxjs-interop';\nimport { pipe, switchMap } from 'rxjs';\nimport { ItemsPerPageComponent } from 'src/app/shared/components/items-per-page/items-per-page.component';\nimport { PaginationComponent } from 'src/app/shared/components/pagination/pagination.component';\nimport { ReservationCardComponent } from '../../components/reservation-card/reservation-card.component';\n\n@Component({\n  selector: 'app-reserves-page',\n  imports: [\n    ItemsPerPageComponent,\n    PaginationComponent,\n    ReservationCardComponent\n  ],\n  templateUrl: './reserves-page.component.html',\n  styles: ``\n})\nexport default class ReservesPageComponent {\n\n  public readonly reservationStore = inject(ReservationStore);\n\n  private getReserves = rxMethod<void>(pipe(\n    switchMap(() => this.reservationStore.getReserves())\n  ));\n\n  public reserves = computed(() => this.reservationStore.reserves());\n  public page = computed(() => this.reservationStore.page());\n  public size = computed(() => this.reservationStore.size());\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.getReserves();\n  }\n\n  ngOnDestroy(): void {\n    this.reservationStore.patchInitialState();\n  }\n\n  public changePage(delta: 1 | -1): void {\n    this.reservationStore.patchPage(this.page() + delta);\n    this.reserves();\n  }\n\n  public changeSize(size: number): void {\n    this.reservationStore.patchSize(size);\n    this.reserves();\n  }\n\n}\n", "<div class=\"flex flex-col mt-10\">\n  <h2 class=\"font-bold text-3xl text-center\">Reservaciones</h2>\n  <div class=\"flex flex-row justify-between my-10\">\n    <items-per-page [size]=\"size()\" (setSize)=\"changeSize($event)\" />\n    <app-pagination [page]=\"page()\" (next)=\"changePage(1)\" (previous)=\"changePage(-1)\"\n      [hasNext]=\"reservationStore.hasNext()\" [hasPrevious]=\"reservationStore.hasPrevious()\"\n    />\n  </div>\n  <div class=\"grid grid-cols-1 md:grid-cols-4\">\n    @for (reserve of reserves(); track $index) {\n      <div class=\"m-2\">\n        <app-reservation-card [reserve]=\"reserve\" />\n      </div>\n    }\n  </div>\n\n</div>\n"],
  "mappings": "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",
  "names": []
}
