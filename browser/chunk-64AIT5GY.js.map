{
  "version": 3,
  "sources": ["src/app/library/services/reservation.service.ts"],
  "sourcesContent": ["import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { environment } from '@envs/environment';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { ReserveResponse } from 'src/app/student/interfaces/reserve.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReservationService {\n\n  private readonly RESERV_URL = `${environment.API_URL}/reservations`\n\n  private httpClient = inject(HttpClient);\n\n  constructor() { }\n\n  public getMyRerservations(page?: number, size?: number): Observable<ReserveResponse> {\n    let params = new HttpParams();\n    if (page != undefined && page >= 0) {\n      params = params.set('page', page);\n    }\n    if (size && size >= 1) {\n      params = params.set('size', size);\n    }\n    const url = `${environment.API_URL}/me`;\n    return this.httpClient.get<ReserveResponse>(url, { params });\n  }\n\n  public createReservation(bookId: string): Observable<void> {\n    return this.httpClient.post<void>(this.RESERV_URL, { bookId }).pipe(\n      catchError((error: HttpErrorResponse) => throwError(() => error))\n    );\n  }\n\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AASM,IAAO,qBAAP,MAAO,oBAAkB;EAEZ,aAAa,GAAG,YAAY,OAAO;EAE5C,aAAa,OAAO,UAAU;EAEtC,cAAA;EAAgB;EAET,mBAAmB,MAAe,MAAa;AACpD,QAAI,SAAS,IAAI,WAAU;AAC3B,QAAI,QAAQ,UAAa,QAAQ,GAAG;AAClC,eAAS,OAAO,IAAI,QAAQ,IAAI;IAClC;AACA,QAAI,QAAQ,QAAQ,GAAG;AACrB,eAAS,OAAO,IAAI,QAAQ,IAAI;IAClC;AACA,UAAM,MAAM,GAAG,YAAY,OAAO;AAClC,WAAO,KAAK,WAAW,IAAqB,KAAK,EAAE,OAAM,CAAE;EAC7D;EAEO,kBAAkB,QAAc;AACrC,WAAO,KAAK,WAAW,KAAW,KAAK,YAAY,EAAE,OAAM,CAAE,EAAE,KAC7D,WAAW,CAAC,UAA6B,WAAW,MAAM,KAAK,CAAC,CAAC;EAErE;;qCAxBW,qBAAkB;EAAA;4EAAlB,qBAAkB,SAAlB,oBAAkB,WAAA,YAFjB,OAAM,CAAA;;",
  "names": []
}
