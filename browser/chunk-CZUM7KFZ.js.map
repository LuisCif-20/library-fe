{
  "version": 3,
  "sources": ["src/app/forms/components/select-input/select-input.component.ts", "src/app/forms/components/select-input/select-input.component.html"],
  "sourcesContent": ["import { Component, input } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { NgClass } from '@angular/common';\n\nimport { SelectOption } from '../../interfaces/select-input.interface';\n\n@Component({\n  selector: 'select-input',\n  imports: [\n    NgClass,\n    ReactiveFormsModule\n  ],\n  templateUrl: './select-input.component.html',\n  styles: ``,\n})\nexport class SelectInputComponent {\n\n  public control = input.required<FormControl<string | number>>();\n  public options = input.required<SelectOption[]>();\n  public legend = input.required<string>();\n  public placeholder = input<string>('Selecciona una opcion...');\n  public label = input<string>('');\n\n  constructor() { }\n\n  get isInvalid(): boolean {\n    return this.control().invalid && (this.control().touched || this.control().dirty);\n  }\n\n}\n", "<fieldset class=\"fieldset\">\n  <legend class=\"fieldset-legend\" [ngClass]=\"{ 'text-error' : isInvalid }\">{{ legend() }}</legend>\n  <select class=\"select\" [ngClass]=\"{ 'input-error' : isInvalid }\" [formControl]=\"control()\">\n    <option value=\"\" disabled [selected]=\"control().value === ''\">{{ placeholder() }}</option>\n    @for (option of options(); track $index) {\n      <option [value]=\"option.value\">{{ option.label }}</option>\n    }\n  </select>\n  @if (label() && isInvalid) {\n    <p class=\"fieldset-label text-error text-[8px]\">{{ label() }}</p>\n  }\n</fieldset>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKM,IAAA,yBAAA,GAAA,UAAA,CAAA;AAA+B,IAAA,iBAAA,CAAA;AAAkB,IAAA,uBAAA;;;;AAAzC,IAAA,qBAAA,SAAA,UAAA,KAAA;AAAuB,IAAA,oBAAA;AAAA,IAAA,4BAAA,UAAA,KAAA;;;;;AAIjC,IAAA,yBAAA,GAAA,KAAA,CAAA;AAAgD,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;;;;AAAb,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,CAAA;;;ADM9C,IAAO,uBAAP,MAAO,sBAAoB;EAExB,UAAU,MAAM,SAAQ;EACxB,UAAU,MAAM,SAAQ;EACxB,SAAS,MAAM,SAAQ;EACvB,cAAc,MAAc,0BAA0B;EACtD,QAAQ,MAAc,EAAE;EAE/B,cAAA;EAAgB;EAEhB,IAAI,YAAS;AACX,WAAO,KAAK,QAAO,EAAG,YAAY,KAAK,QAAO,EAAG,WAAW,KAAK,QAAO,EAAG;EAC7E;;qCAZW,uBAAoB;EAAA;yEAApB,uBAAoB,WAAA,CAAA,CAAA,cAAA,CAAA,GAAA,QAAA,EAAA,SAAA,CAAA,GAAA,SAAA,GAAA,SAAA,CAAA,GAAA,SAAA,GAAA,QAAA,CAAA,GAAA,QAAA,GAAA,aAAA,CAAA,GAAA,aAAA,GAAA,OAAA,CAAA,GAAA,OAAA,EAAA,GAAA,OAAA,GAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,SAAA,GAAA,CAAA,GAAA,UAAA,GAAA,WAAA,aAAA,GAAA,CAAA,SAAA,IAAA,YAAA,IAAA,GAAA,UAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,kBAAA,cAAA,YAAA,CAAA,GAAA,UAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;ACfjC,MAAA,yBAAA,GAAA,YAAA,CAAA,EAA2B,GAAA,UAAA,CAAA;AACgD,MAAA,iBAAA,CAAA;AAAc,MAAA,uBAAA;AACvF,MAAA,yBAAA,GAAA,UAAA,CAAA,EAA2F,GAAA,UAAA,CAAA;AAC3B,MAAA,iBAAA,CAAA;AAAmB,MAAA,uBAAA;AACjF,MAAA,2BAAA,GAAA,qCAAA,GAAA,GAAA,UAAA,GAAA,gCAAA;AAGF,MAAA,uBAAA;AACA,MAAA,qBAAA,GAAA,6CAAA,GAAA,GAAA,KAAA,CAAA;AAGF,MAAA,uBAAA;;;AAVkC,MAAA,oBAAA;AAAA,MAAA,qBAAA,WAAA,0BAAA,GAAA,KAAA,IAAA,SAAA,CAAA;AAAyC,MAAA,oBAAA;AAAA,MAAA,4BAAA,IAAA,OAAA,CAAA;AAClD,MAAA,oBAAA;AAAA,MAAA,qBAAA,WAAA,0BAAA,GAAA,KAAA,IAAA,SAAA,CAAA,EAAyC,eAAA,IAAA,QAAA,CAAA;AACpC,MAAA,oBAAA;AAAA,MAAA,qBAAA,YAAA,IAAA,QAAA,EAAA,UAAA,EAAA;AAAoC,MAAA,oBAAA;AAAA,MAAA,4BAAA,IAAA,YAAA,CAAA;AAC9D,MAAA,oBAAA;AAAA,MAAA,qBAAA,IAAA,QAAA,CAAS;AAIX,MAAA,oBAAA,CAAA;AAAA,MAAA,wBAAA,IAAA,MAAA,KAAA,IAAA,YAAA,IAAA,EAAA;;;IDCE;IACA;IAAmB;IAAA;IAAA;IAAA;IAAA;EAAA,GAAA,eAAA,EAAA,CAAA;;;6EAKV,sBAAoB,EAAA,WAAA,wBAAA,UAAA,mEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
