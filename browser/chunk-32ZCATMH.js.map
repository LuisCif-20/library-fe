{
  "version": 3,
  "sources": ["src/app/theme/services/theme.service.ts"],
  "sourcesContent": ["import { computed, Injectable, signal } from '@angular/core';\nimport { Theme } from '../interfaces/theme.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  private isDarkTheme = signal<boolean>(false);\n\n  public theme = computed<Theme>(() => {\n    const isDarkTheme = this.isDarkTheme();\n    return {\n      icon: isDarkTheme ? 'light_mode' : 'dark_mode',\n      label: isDarkTheme ? 'Modo Claro' : 'Modo Oscuro'\n    }\n  });\n\n  constructor() { }\n\n  public toggleTheme(): void {\n    this.isDarkTheme.update((value) => !value);\n    localStorage.setItem('theme', this.isDarkTheme() ? 'dark' : 'light');\n    this.updateTheme();\n  }\n\n  private updateTheme(): void {\n    const body: HTMLElement = document.body;\n    this.isDarkTheme() ? body.setAttribute('data-theme', 'dark') : body.setAttribute('data-theme', 'light');\n  }\n\n  public loadUserTheme(): void {\n    const savedTheme = localStorage.getItem('theme');\n    this.isDarkTheme.set(\n      savedTheme ? savedTheme === 'dark' : window.matchMedia('(prefers-color-scheme: dark)').matches\n    );\n    this.updateTheme();\n  }\n\n}\n"],
  "mappings": ";;;;;;;AAMM,IAAO,eAAP,MAAO,cAAY;EAEf,cAAc,OAAgB,KAAK;EAEpC,QAAQ,SAAgB,MAAK;AAClC,UAAM,cAAc,KAAK,YAAW;AACpC,WAAO;MACL,MAAM,cAAc,eAAe;MACnC,OAAO,cAAc,eAAe;;EAExC,CAAC;EAED,cAAA;EAAgB;EAET,cAAW;AAChB,SAAK,YAAY,OAAO,CAAC,UAAU,CAAC,KAAK;AACzC,iBAAa,QAAQ,SAAS,KAAK,YAAW,IAAK,SAAS,OAAO;AACnE,SAAK,YAAW;EAClB;EAEQ,cAAW;AACjB,UAAM,OAAoB,SAAS;AACnC,SAAK,YAAW,IAAK,KAAK,aAAa,cAAc,MAAM,IAAI,KAAK,aAAa,cAAc,OAAO;EACxG;EAEO,gBAAa;AAClB,UAAM,aAAa,aAAa,QAAQ,OAAO;AAC/C,SAAK,YAAY,IACf,aAAa,eAAe,SAAS,OAAO,WAAW,8BAA8B,EAAE,OAAO;AAEhG,SAAK,YAAW;EAClB;;qCA/BW,eAAY;EAAA;4EAAZ,eAAY,SAAZ,cAAY,WAAA,YAFX,OAAM,CAAA;;",
  "names": []
}
