{
  "version": 3,
  "sources": ["src/app/shared/interfaces/position.types.ts", "src/app/theme/components/theme-switcher/theme-switcher.component.ts", "src/app/theme/components/theme-switcher/theme-switcher.component.html"],
  "sourcesContent": ["export const POSITION_VARIANTS = {\n  top:    'tooltip-top',\n  left:   'tooltip-left',\n  right:  'tooltip-right',\n  bottom: 'tooltip-bottom',\n} as const;\n\nexport type Position = 'top' | 'left' | 'right' | 'bottom';\n", "import { NgClass } from '@angular/common';\nimport { Component, computed, inject, input } from '@angular/core';\n\nimport { ThemeService } from '../../services/theme.service';\nimport { HoverStyleDirective } from '../../../shared/directives/hover-style.directive';\nimport { Position, POSITION_VARIANTS } from '../../../shared/interfaces/position.types';\n\n@Component({\n  selector: 'theme-switcher',\n  imports: [\n    NgClass,\n    HoverStyleDirective\n  ],\n  templateUrl: './theme-switcher.component.html',\n  styles: ``\n})\nexport class ThemeSwitcherComponent {\n\n  public tooltipPosition = input<Position>('bottom');\n\n  private themeService = inject(ThemeService);\n\n  public theme = computed(() => this.themeService.theme());\n\n  public positionClass = computed(() => POSITION_VARIANTS[this.tooltipPosition()]);\n\n  constructor() { }\n\n  public onToggleTheme(): void {\n    this.themeService.toggleTheme();\n  }\n\n}\n", "<div class=\"tooltip\" [ngClass]=\"positionClass()\" [attr.data-tip]=\"theme().label\">\n  <button class=\"btn btn-circle bg-transparent border-none shadow-none\" hoverStyle (click)=\"onToggleTheme()\">\n    <span class=\"text-white\">{{ theme().icon }}</span>\n  </button>\n</div>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAM,oBAAoB;EAC/B,KAAQ;EACR,MAAQ;EACR,OAAQ;EACR,QAAQ;;;;ACYJ,IAAO,yBAAP,MAAO,wBAAsB;EAE1B,kBAAkB,MAAgB,QAAQ;EAEzC,eAAe,OAAO,YAAY;EAEnC,QAAQ,SAAS,MAAM,KAAK,aAAa,MAAK,CAAE;EAEhD,gBAAgB,SAAS,MAAM,kBAAkB,KAAK,gBAAe,CAAE,CAAC;EAE/E,cAAA;EAAgB;EAET,gBAAa;AAClB,SAAK,aAAa,YAAW;EAC/B;;qCAdW,yBAAsB;EAAA;yEAAtB,yBAAsB,WAAA,CAAA,CAAA,gBAAA,CAAA,GAAA,QAAA,EAAA,iBAAA,CAAA,GAAA,iBAAA,EAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,WAAA,GAAA,SAAA,GAAA,CAAA,cAAA,IAAA,GAAA,OAAA,cAAA,kBAAA,eAAA,eAAA,GAAA,OAAA,GAAA,CAAA,GAAA,YAAA,CAAA,GAAA,UAAA,SAAA,gCAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AChBnC,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAiF,GAAA,UAAA,CAAA;AACE,MAAA,qBAAA,SAAA,SAAA,0DAAA;AAAA,eAAS,IAAA,cAAA;MAAe,CAAA;AACvG,MAAA,yBAAA,GAAA,QAAA,CAAA;AAAyB,MAAA,iBAAA,CAAA;AAAkB,MAAA,uBAAA,EAAO,EAC3C;;;AAHU,MAAA,qBAAA,WAAA,IAAA,cAAA,CAAA;;AAEQ,MAAA,oBAAA,CAAA;AAAA,MAAA,4BAAA,IAAA,MAAA,EAAA,IAAA;;;IDQzB;IACA;EAAmB,GAAA,eAAA,EAAA,CAAA;;;6EAKV,wBAAsB,EAAA,WAAA,0BAAA,UAAA,uEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
