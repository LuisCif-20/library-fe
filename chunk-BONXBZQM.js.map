{
  "version": 3,
  "sources": ["src/app/library/services/publisher.service.ts"],
  "sourcesContent": ["import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { environment } from '@envs/environment';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { PublisherData, PublisherResponse } from '../interfaces/publisher.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublisherService {\n\n  private readonly PUBLISHER_URL = `${environment.API_URL}/publishers`;\n\n  private httpClient = inject(HttpClient);\n\n  constructor() { }\n\n  public getPublishers(page?: number, size?: number): Observable<PublisherResponse> {\n    let params = new HttpParams();\n    if (page != undefined && page >= 0) {\n      params = params.set('page', page);\n    }\n    if (size && size >= 1) {\n      params = params.set('size', size);\n    }\n    return this.httpClient.get<PublisherResponse>(this.PUBLISHER_URL, { params });\n  }\n\n  public createPublisher(body: PublisherData): Observable<void> {\n    return this.httpClient.post<void>(this.PUBLISHER_URL, body).pipe(\n      catchError((error: HttpErrorResponse) => throwError(() => error))\n    );\n  }\n\n  public updatePublisher(id: string, body: PublisherData): Observable<void> {\n    const url = `${this.PUBLISHER_URL}/${id}`;\n    return this.httpClient.put<void>(url, body).pipe(\n      catchError((error: HttpErrorResponse) => throwError(() => error))\n    );\n  }\n\n  public deletePublisher(id: string): Observable<void> {\n    const url = `${this.PUBLISHER_URL}/${id}`;\n    return this.httpClient.delete<void>(url).pipe(\n      catchError((error: HttpErrorResponse) => throwError(() => error))\n    );\n  }\n\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AASM,IAAO,mBAAP,MAAO,kBAAgB;EAEV,gBAAgB,GAAG,YAAY,OAAO;EAE/C,aAAa,OAAO,UAAU;EAEtC,cAAA;EAAgB;EAET,cAAc,MAAe,MAAa;AAC/C,QAAI,SAAS,IAAI,WAAU;AAC3B,QAAI,QAAQ,UAAa,QAAQ,GAAG;AAClC,eAAS,OAAO,IAAI,QAAQ,IAAI;IAClC;AACA,QAAI,QAAQ,QAAQ,GAAG;AACrB,eAAS,OAAO,IAAI,QAAQ,IAAI;IAClC;AACA,WAAO,KAAK,WAAW,IAAuB,KAAK,eAAe,EAAE,OAAM,CAAE;EAC9E;EAEO,gBAAgB,MAAmB;AACxC,WAAO,KAAK,WAAW,KAAW,KAAK,eAAe,IAAI,EAAE,KAC1D,WAAW,CAAC,UAA6B,WAAW,MAAM,KAAK,CAAC,CAAC;EAErE;EAEO,gBAAgB,IAAY,MAAmB;AACpD,UAAM,MAAM,GAAG,KAAK,aAAa,IAAI,EAAE;AACvC,WAAO,KAAK,WAAW,IAAU,KAAK,IAAI,EAAE,KAC1C,WAAW,CAAC,UAA6B,WAAW,MAAM,KAAK,CAAC,CAAC;EAErE;EAEO,gBAAgB,IAAU;AAC/B,UAAM,MAAM,GAAG,KAAK,aAAa,IAAI,EAAE;AACvC,WAAO,KAAK,WAAW,OAAa,GAAG,EAAE,KACvC,WAAW,CAAC,UAA6B,WAAW,MAAM,KAAK,CAAC,CAAC;EAErE;;qCArCW,mBAAgB;EAAA;4EAAhB,mBAAgB,SAAhB,kBAAgB,WAAA,YAFf,OAAM,CAAA;;",
  "names": []
}
