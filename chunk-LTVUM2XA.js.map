{
  "version": 3,
  "sources": ["src/app/forms/components/image-input/image-input.component.ts", "src/app/forms/components/image-input/image-input.component.html"],
  "sourcesContent": ["import { NgClass } from '@angular/common';\nimport { Component, input, output } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'image-input',\n  imports: [\n    NgClass,\n    ReactiveFormsModule\n  ],\n  templateUrl: './image-input.component.html',\n  styles: ``\n})\nexport class ImageInputComponent {\n\n  public control = input.required<FormControl<Blob | null>>();\n  public legend = input.required<string>();\n  public placeholder = input<string>();\n  public label = input<string>();\n  public imageUrl = output<string>();\n\n  constructor() { }\n\n  get isInvalid(): boolean {\n    return this.control().invalid && (this.control().touched || this.control().dirty);\n  }\n\n  public catchImage(event: Event): void {\n    const fileList: FileList | null = (event.target as HTMLInputElement).files;\n    if (fileList) {\n      const file = fileList[0];\n      if (file) {\n        this.imageUrl.emit(URL.createObjectURL(file));\n        this.control().setValue(file);\n      }\n    }\n  }\n\n}\n", "<fieldset class=\"fieldset\">\n  <legend class=\"fieldset-legend\" [ngClass]=\"{ 'text-error' : isInvalid }\">{{ legend() }}</legend>\n  <input type=\"file\"\n    class=\"file-input\"\n    [ngClass]=\"{ 'input-error' : isInvalid }\"\n    (change)=\"catchImage($event)\"\n  />\n  @if (label() && isInvalid) {\n    <p class=\"fieldset-label text-error text-[8px]\">{{ label() }}</p>\n  }\n</fieldset>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;ACQI,IAAA,yBAAA,GAAA,KAAA,CAAA;AAAgD,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;;;;AAAb,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,CAAA;;;ADK9C,IAAO,sBAAP,MAAO,qBAAmB;EAEvB,UAAU,MAAM,SAAQ;EACxB,SAAS,MAAM,SAAQ;EACvB,cAAc,MAAK;EACnB,QAAQ,MAAK;EACb,WAAW,OAAM;EAExB,cAAA;EAAgB;EAEhB,IAAI,YAAS;AACX,WAAO,KAAK,QAAO,EAAG,YAAY,KAAK,QAAO,EAAG,WAAW,KAAK,QAAO,EAAG;EAC7E;EAEO,WAAW,OAAY;AAC5B,UAAM,WAA6B,MAAM,OAA4B;AACrE,QAAI,UAAU;AACZ,YAAM,OAAO,SAAS,CAAC;AACvB,UAAI,MAAM;AACR,aAAK,SAAS,KAAK,IAAI,gBAAgB,IAAI,CAAC;AAC5C,aAAK,QAAO,EAAG,SAAS,IAAI;MAC9B;IACF;EACF;;qCAvBW,sBAAmB;EAAA;yEAAnB,sBAAmB,WAAA,CAAA,CAAA,aAAA,CAAA,GAAA,QAAA,EAAA,SAAA,CAAA,GAAA,SAAA,GAAA,QAAA,CAAA,GAAA,QAAA,GAAA,aAAA,CAAA,GAAA,aAAA,GAAA,OAAA,CAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,UAAA,WAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,SAAA,GAAA,CAAA,QAAA,QAAA,GAAA,cAAA,GAAA,UAAA,SAAA,GAAA,CAAA,GAAA,kBAAA,cAAA,YAAA,CAAA,GAAA,UAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;ACbhC,MAAA,yBAAA,GAAA,YAAA,CAAA,EAA2B,GAAA,UAAA,CAAA;AACgD,MAAA,iBAAA,CAAA;AAAc,MAAA,uBAAA;AACvF,MAAA,yBAAA,GAAA,SAAA,CAAA;AAGE,MAAA,qBAAA,UAAA,SAAA,qDAAA,QAAA;AAAA,eAAU,IAAA,WAAA,MAAA;MAAkB,CAAA;AAH9B,MAAA,uBAAA;AAKA,MAAA,qBAAA,GAAA,4CAAA,GAAA,GAAA,KAAA,CAAA;AAGF,MAAA,uBAAA;;;AATkC,MAAA,oBAAA;AAAA,MAAA,qBAAA,WAAA,0BAAA,GAAA,KAAA,IAAA,SAAA,CAAA;AAAyC,MAAA,oBAAA;AAAA,MAAA,4BAAA,IAAA,OAAA,CAAA;AAGvE,MAAA,oBAAA;AAAA,MAAA,qBAAA,WAAA,0BAAA,GAAA,KAAA,IAAA,SAAA,CAAA;AAGF,MAAA,oBAAA;AAAA,MAAA,wBAAA,IAAA,MAAA,KAAA,IAAA,YAAA,IAAA,EAAA;;;IDAE;IACA;EAAmB,GAAA,eAAA,EAAA,CAAA;;;6EAKV,qBAAmB,EAAA,WAAA,uBAAA,UAAA,iEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
